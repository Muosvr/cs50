stack frames/functions frames
only the top frame in the stack is the active frame
once the function in the active frame finishes, it pops off, so the next frame in the stack becomes active

File Pointers
+
fopen()
Opens a file and returns a file pointer to it
Always check the return value to make sure you don't get back NULL
FILE* ptr1 = fopen("file1.txt", "r") //"r" for reading, "w" for write, "a" for appending
+
fclose(<file pointer>);
Closes the file
e.g.
fclose(ptr1);
+
fgetc()
Reads and returns the next character from the file pointed to
Note: file pointer passed in must be in "r"
e.g.
char ch = fgetc(ptr1);
e.g.2
//this is what cat.c does
char ch;
while((ch = fgetc(ptr)) ! = EOF)
      printf("%c", ch);
+
fputc()
Writes a single character to the file
file needs to be in "w" status
e.g.
fput('A',ptr2);
e.g.2
//duplicate Linux cp command:
char ch
while(( ch = fgetc(ptr)) ! = EOF)
       fputc(ch, ptr2);
+
fread()
fread(<buffer>, <size>, <qty>, <file pointer>);
Reads<qty> unites of size <size> from the file pointed to the stores them in memory in a buffer (usually an array) pointed to by <buffer>
Note: file pointer must be in "r" for read
e.g.
int arr[10]; //declare array of ten integers
fread(arr, sizeof(int), 10, ptr); // read size of int
e.g.2
//Use dynamically allocated memory(saving on the heap)
double* arr2 = malloc(sizeof(double)*80);
fread(arr2, sizeof(double), 80, ptr); //note the name of an array is a pointer to its first element
e.g.3
//store in individual character
char c;
fread(&c, sizeof(char), 1, ptr); //need to use &c because first parameter needs to be a pointer
+
fwrite()
usage: fwrite(<buffer>, <size> , <qty>, <file pointer>);
writes<qty> units of size<size> to the file pointed to by reading them from a buffer (usually an array) pointed to by < buffer>
e.g.
int arr[10] //already have info stored
fwrite(arr, sizeof(int), 10, ptr) //taking info stored in arr and putting into the file pointed to by ptr // buffer > file
//also works with heap and one single character as fread() above
+
fgets()
Reads a full string from a file
+
fputs()
Writes a full string to a file
+
fprintf()
Writes a formatted string to a file
+
fseek()
Allows you rewind or fast-forward within a file
+
ftell()
Tells you at what (byte) position you are at within a file
+
feof()
Tells you whether you've read to the end of a file
+
ferror()
Indicates whether an error has occurred in working with a file

